<?xml version="1.0" ?>
<robot name="turtlebot3_waffle" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- <xacro:include filename="$(find turtlebot3_description)/urdf/common_properties.urdf"/>

  <xacro:property name="r200_cam_rgb_px" value="0.005"/>
  <xacro:property name="r200_cam_rgb_py" value="0.018"/>
  <xacro:property name="r200_cam_rgb_pz" value="0.013"/>
  <xacro:property name="r200_cam_depth_offset" value="0.01"/> -->
  <xacro:arg name="namespace" default=""/>
  <xacro:property name="namespace" value="$(arg namespace)"/>
  <!-- Init colour -->
  <material name="black">
      <color rgba="0.0 0.0 0.0 1.0"/> 
  </material>

  <material name="dark">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>

  <material name="light_black">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>

  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>

  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>

  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>

  <material name="orange">
    <color rgba="1.0 0.4235 0.0392 1.0"/>
  </material>

  <material name="brown">
    <color rgba="0.8706 0.8118 0.7647 1.0"/>
  </material>

  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>

  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>

  <link name="${namespace}base_footprint"/>

  <joint name="${namespace}base_joint" type="fixed">
    <parent link="${namespace}base_footprint"/>
    <child link="${namespace}base_link" />
    <origin xyz="0 0 0.010" rpy="0 0 0"/>
  </joint>

  <link name="${namespace}base_link">
    <visual>
      <origin xyz="-0.064 0 0.0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/bases/waffle_base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="light_black"/>
    </visual>

    <collision>
      <origin xyz="-0.064 0 0.047" rpy="0 0 0"/>
      <geometry>
        <box size="0.266 0.266 0.094"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="1.3729096e+00"/>
      <inertia ixx="8.7002718e-03" ixy="-4.7576583e-05" ixz="1.1160499e-04"
               iyy="8.6195418e-03" iyz="-3.5422299e-06"
               izz="1.4612727e-02" />
    </inertial>
  </link>

  <joint name="${namespace}wheel_left_joint" type="continuous">
    <parent link="${namespace}base_link"/>
    <child link="${namespace}wheel_left_link"/>
    <origin xyz="0.0 0.144 0.023" rpy="-1.57 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="${namespace}wheel_left_link">
    <visual>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/wheels/left_tire.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="dark"/>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.018" radius="0.033"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" />
      <mass value="2.8498940e-02" />
      <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09"
               iyy="1.1192413e-05" iyz="-1.4400107e-11"
               izz="2.0712558e-05" />
      </inertial>
  </link>

  <joint name="${namespace}wheel_right_joint" type="continuous">
    <parent link="${namespace}base_link"/>
    <child link="${namespace}wheel_right_link"/>
    <origin xyz="0.0 -0.144 0.023" rpy="-1.57 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="${namespace}wheel_right_link">
    <visual>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/wheels/right_tire.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="dark"/>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.018" radius="0.033"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" />
      <mass value="2.8498940e-02" />
      <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09"
               iyy="1.1192413e-05" iyz="-1.4400107e-11"
               izz="2.0712558e-05" />
      </inertial>
  </link>

  <joint name="${namespace}caster_back_right_joint" type="fixed">
    <parent link="${namespace}base_link"/>
    <child link="${namespace}caster_back_right_link"/>
    <origin xyz="-0.177 -0.064 -0.004" rpy="-1.57 0 0"/>
  </joint>

  <link name="${namespace}caster_back_right_link">
    <collision>
      <origin xyz="0 0.001 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.030 0.009 0.020"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" />
      <mass value="0.005" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
               iyy="0.001" iyz="0.0"
               izz="0.001" />
    </inertial>
  </link>

  <joint name="${namespace}caster_back_left_joint" type="fixed">
    <parent link="${namespace}base_link"/>
    <child link="${namespace}caster_back_left_link"/>
    <origin xyz="-0.177 0.064 -0.004" rpy="-1.57 0 0"/>
  </joint>

  <link name="${namespace}caster_back_left_link">
    <collision>
      <origin xyz="0 0.001 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.030 0.009 0.020"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" />
      <mass value="0.005" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
               iyy="0.001" iyz="0.0"
               izz="0.001" />
    </inertial>
  </link>

  <joint name="${namespace}imu_joint" type="fixed">
    <parent link="${namespace}base_link"/>
    <child link="${namespace}imu_link"/>
    <origin xyz="0.0 0 0.068" rpy="0 0 0"/>
  </joint>

  <link name="${namespace}imu_link"/>

  <joint name="${namespace}scan_joint" type="fixed">
    <parent link="${namespace}base_link"/>
    <child link="${namespace}base_scan"/>
    <origin xyz="-0.064 0 0.122" rpy="0 0 0"/>
  </joint>

  <link name="${namespace}base_scan">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/sensors/lds.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="dark"/>
    </visual>

    <collision>
      <origin xyz="0.015 0 -0.0065" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.0315" radius="0.055"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="0.114" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
               iyy="0.001" iyz="0.0"
               izz="0.001" />
    </inertial>
  </link>

  <joint name="${namespace}camera_joint" type="fixed">
    <origin xyz="0.064 -0.065 0.094" rpy="0 0 0"/>
    <parent link="${namespace}base_link"/>
    <child link="${namespace}camera_link"/>
  </joint>

  <link name="${namespace}camera_link">
    <visual>
     <origin xyz="0 0 0" rpy="1.57 0 1.57"/>
      <geometry>
       <mesh filename="package://turtlebot3_description/meshes/sensors/r200.dae" />
      </geometry>
    </visual>
    <collision>
      <origin xyz="0.003 0.065 0.007" rpy="0 0 0"/>
      <geometry>
        <box size="0.012 0.132 0.020"/>
      </geometry>
    </collision>

    <!-- This inertial field needs doesn't contain reliable data!! -->
<!--   <inertial>
      <mass value="0.564" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
               iyy="0.000498940" iyz="0.0"
               izz="0.003879257" />
    </inertial>-->
  </link>

  <joint name="${namespace}camera_rgb_joint" type="fixed">
    <origin xyz="0.005 0.018 0.013" rpy="0 0 0"/>
    <!-- <origin xyz="${r200_cam_rgb_px} ${r200_cam_rgb_py} ${r200_cam_rgb_pz}" rpy="0 0 0"/> -->
    <parent link="${namespace}camera_link"/>
    <child link="${namespace}camera_rgb_frame"/>
  </joint>
  <link name="${namespace}camera_rgb_frame"/>

  <joint name="${namespace}camera_rgb_optical_joint" type="fixed">
    <origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>
    <parent link="${namespace}camera_rgb_frame"/>
    <child link="${namespace}camera_rgb_optical_frame"/>
  </joint>
  <link name="${namespace}camera_rgb_optical_frame"/>

  <joint name="${namespace}camera_depth_joint" type="fixed">
    <origin xyz="0.005 0.028 0.013" rpy="0 0 0"/>
    <!-- <origin xyz="${r200_cam_rgb_px} ${r200_cam_rgb_py + r200_cam_depth_offset} ${r200_cam_rgb_pz}" rpy="0 0 0"/> -->
    <parent link="${namespace}camera_link"/>
    <child link="${namespace}camera_depth_frame"/>
  </joint>
  <link name="${namespace}camera_depth_frame"/>

  <joint name="${namespace}camera_depth_optical_joint" type="fixed">
    <origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>
    <parent link="${namespace}camera_depth_frame"/>
    <child link="${namespace}camera_depth_optical_frame"/>
  </joint>
  <link name="${namespace}camera_depth_optical_frame"/>

  <!-- ================= LiDAR ================= -->
  <link name="lidar3d_link">
    <visual>
      <geometry>
        <cylinder length="0.1" radius="0.05"/>
      </geometry>
      <material name="grey"/>
    </visual>
  </link>
  <joint name="lidar3d_joint" type="fixed">
    <parent link="${namespace}base_link"/>
    <child link="lidar3d_link"/>
    <origin xyz="0 0 0.30" rpy="0 0 0"/>
  </joint>
  <gazebo reference="lidar3d_link">
    <sensor type="gpu_ray" name="lidar3d">
      <update_rate>10</update_rate>
      <visualize>true</visualize>
      <topic>lidar3d/points</topic>
      <plugin name="gazebo_ros_laser" filename="libgazebo_ros_ray_sensor.so"/>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.5</min_angle>
            <max_angle>0.5</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.12</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>

  <!-- ================= Front Camera ================= -->
  <link name="camera_front_link">
    <visual>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>
  <joint name="camera_front_joint" type="fixed">
    <parent link="${namespace}base_link"/>
    <child link="camera_front_link"/>
    <origin xyz="0.15 0.0 0.25" rpy="0 0 0"/>
  </joint>
  <gazebo reference="camera_front_link">
    <sensor type="camera" name="camera_front">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip><near>0.02</near><far>50</far></clip>
      </camera>
      <plugin name="camera_front_controller" filename="libgazebo_ros_camera.so">
        <ros>
          <remapping>image_raw:=/camera_front/image_raw</remapping>
          <remapping>camera_info:=/camera_front/camera_info</remapping>
        </ros>
      </plugin>
    </sensor>
  </gazebo>

  <!-- ================= Back Camera ================= -->
  <link name="camera_back_link">
    <visual>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
      <material name="green"/>
    </visual>
  </link>
  <joint name="camera_back_joint" type="fixed">
    <parent link="${namespace}base_link"/>
    <child link="camera_back_link"/>
    <origin xyz="-0.15 0.0 0.25" rpy="0 3.14 0"/>
  </joint>
  <gazebo reference="camera_back_link">
    <sensor type="camera" name="camera_back">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip><near>0.02</near><far>50</far></clip>
      </camera>
      <plugin name="camera_back_controller" filename="libgazebo_ros_camera.so">
        <ros>
          <remapping>image_raw:=/camera_back/image_raw</remapping>
          <remapping>camera_info:=/camera_back/camera_info</remapping>
        </ros>
      </plugin>
    </sensor>
  </gazebo>

</robot>
